@use "mixins" as mix;
@use "variables" as var;

.rules {
    position: fixed;
    width: 100%;
    height: 100vh;
    top: 0;
    right: 0;
    background-color: map-get($map: var.$colors-map, $key: "white");
    transition: all 1 ease;
    animation-duration: .5s;

    @media (min-width:768px) {
        @include mix.flex-box(column, nowrap, center, center);
        background-color: rgba(0, 0, 0, .55);
    }
}

.rules--show{
    animation-name: rules-show;
}

.rules--hide{
    animation-name: rules-hide;
}

.rules__container {
    padding: 2rem;
    width: 100%;
    height: 100%;
    background-color: map-get($map: var.$colors-map, $key: "white");
    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-areas:
        'title'
        'img'
        'btn';
    border-radius: .625rem;

    @media (min-width:768px) {
        width: 25rem;
        height: 25rem;
        grid-template-rows: repeat(2, 1fr);
        grid-template-areas:
            'title btn'
            'img img';
            gap: 2rem;
            padding: 0 2rem 2rem 2rem;
    }
}

.rules__title {
    grid-area: title;
    color: map-get($map: var.$colors-map, $key: "dark-text");
    font-weight: 700;
    font-size: 2rem;
    text-transform: uppercase;
    text-align: center;

    @media (min-width:768px){
        align-self: center;
        text-align: left;
    }
}

.rules-image {
    grid-area: img;
    position: relative;
    width: 18.75rem;
    height: 18.75rem;
    margin: 0 auto;

    @media (min-width:768px) {
        width: 15.625rem;
        height: 15.625rem;
    }
}

.rules-image__img,
.rules-btn__img {
    object-fit: contain;
}

.rules-btn {
    grid-area: btn;
    position: relative;
    width: 30px;
    height: 30px;
    margin: 0 auto;
    align-self: end;
    cursor: pointer;

    @media (min-width:768px){
        align-self: center;
        justify-self: end;
        margin: 0 0;
    }
}